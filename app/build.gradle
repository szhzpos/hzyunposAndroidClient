apply plugin: 'com.android.application'
android {
    compileSdkVersion 30
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.wyc.cloudapp"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 7
        versionName "1.0.9"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                //生成多个版本的so文件
                abiFilters 'arm64-v8a','armeabi-v7a','x86','x86_64'
            }
        }
    }

    final Properties props = new Properties()
    props.load(new FileInputStream(file("signing.properties")))
    signingConfigs {
        release{
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release

            lintOptions {
                checkReleaseBuilds true
                abortOnError true
            }

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "src/main/java/jni/CMakeLists.txt"
            version "3.10.2"
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'libs'
    }
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                //在这里修改apk文件名
                outputFileName = "${"yunpos_pad_" + defaultConfig.versionCode + "_v" + defaultConfig.versionName}.apk"
                if (variant.buildType.name == 'release') {
                    variant.assembleProvider.get().doLast {
                        copy {
                            from variant.packageApplicationProvider.get().outputs.files[1]
                            into "${projectDir}/release"
                            rename { String fileName ->outputFileName
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'net.sourceforge.jexcelapi:jxl:2.6.12'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation project(path:':android')
    implementation 'com.alibaba:fastjson:1.2.69'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    debugApi 'com.squareup.leakcanary:leakcanary-android:1.6'
    releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.6'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6'

    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
}
